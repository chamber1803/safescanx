import { serve } from "https://deno.land/std@0.168.0/http/server.ts";

const corsHeaders = {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type',
  'Access-Control-Allow-Methods': 'POST, OPTIONS'
};

interface MalwareBazaarResponse {
  query_status: string;
  data: Array<{
    sha256_hash: string;
    file_name: string;
    signature: string;
    threat_level: number;
  }>;
}

serve(async (req) => {
  // Handle CORS preflight requests
  if (req.method === 'OPTIONS') {
    return new Response(null, { headers: corsHeaders });
  }

  try {
    const url = new URL(req.url);
    const service = url.searchParams.get('service');
    const hash = url.searchParams.get('hash');

    // Validate required parameters
    if (!service || service !== 'malwarebazaar') {
      return new Response(
        JSON.stringify({ error: 'Invalid or missing service parameter' }),
        {
          status: 400,
          headers: { ...corsHeaders, 'Content-Type': 'application/json' }
        }
      );
    }

    if (!hash || !/^[a-fA-F0-9]{64}$/.test(hash)) {
      return new Response(
        JSON.stringify({ error: 'Invalid or missing SHA-256 hash' }),
        {
          status: 400,
          headers: { ...corsHeaders, 'Content-Type': 'application/json' }
        }
      );
    }

    // Get API key from environment
    const API_KEY = Deno.env.get('MALWAREBAZAAR_API_KEY');
    if (!API_KEY) {
      throw new Error('MalwareBazaar API key not configured');
    }

    // Prepare request to MalwareBazaar
    const formData = new URLSearchParams();
    formData.append('query', 'get_info');
    formData.append('hash', hash);

    console.log(`Checking MalwareBazaar for hash: ${hash}`);

    const response = await fetch('https://mb-api.abuse.ch/api/v1/', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded',
        'Auth-Key': API_KEY
      },
      body: formData.toString()
    });

    if (!response.ok) {
      throw new Error(`MalwareBazaar API error: ${response.status}`);
    }

    const data: MalwareBazaarResponse = await response.json();
    console.log('MalwareBazaar response:', data);

    return new Response(
      JSON.stringify(data),
      {
        headers: { ...corsHeaders, 'Content-Type': 'application/json' }
      }
    );

  } catch (error) {
    console.error('Error in malware-check function:', error);
    
    return new Response(
      JSON.stringify({
        error: error instanceof Error ? error.message : 'Unknown error occurred',
        timestamp: new Date().toISOString()
      }),
      {
        status: 500,
        headers: { ...corsHeaders, 'Content-Type': 'application/json' }
      }
    );
  }
});