import { serve } from "https://deno.land/std@0.168.0/http/server.ts";

const corsHeaders = {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type',
  'Access-Control-Allow-Methods': 'POST, GET, OPTIONS'
};

serve(async (req) => {
  if (req.method === 'OPTIONS') {
    return new Response('ok', { headers: corsHeaders });
  }

  try {
    const url = new URL(req.url);
    const service = url.searchParams.get('service');
    const endpoint = url.searchParams.get('endpoint');

    if (service === 'malwarebazaar') {
      const BAZAAR_KEY = Deno.env.get('MALWAREBAZAAR_API_KEY');
      if (!BAZAAR_KEY) {
        throw new Error('MalwareBazaar API key not configured');
      }

      const formData = await req.formData();
      const response = await fetch('https://mb-api.abuse.ch/api/v1/', {
        method: 'POST',
        headers: {
          'Auth-Key': BAZAAR_KEY
        },
        body: formData
      });

      const data = await response.json();
      return new Response(JSON.stringify(data), {
        headers: { ...corsHeaders, 'Content-Type': 'application/json' }
      });
    }

    if (service === 'hybrid-analysis') {
      const HA_KEY = Deno.env.get('HYBRID_ANALYSIS_API_KEY');
      if (!HA_KEY) {
        throw new Error('Hybrid Analysis API key not configured');
      }

      const response = await fetch(`https://www.hybrid-analysis.com/api/v2/${endpoint}`, {
        method: req.method,
        headers: {
          'api-key': HA_KEY,
          'User-Agent': 'Hybrid-Analysis-JavaScript/1.0',
          'accept': 'application/json'
        },
        ...(req.method === 'POST' ? { body: req.body } : {})
      });

      const data = await response.json();
      return new Response(JSON.stringify(data), {
        headers: { ...corsHeaders, 'Content-Type': 'application/json' }
      });
    }

    throw new Error('Invalid service specified');
  } catch (error) {
    return new Response(JSON.stringify({ error: error.message }), {
      status: 500,
      headers: { ...corsHeaders, 'Content-Type': 'application/json' }
    });
  }
});